#!/usr/bin/false This file is meant to be sourced
# ========================================================================
# Copyright (c) 2007-2017 T. R. Burghart.
# 
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# ========================================================================
#
# Common build tools environment
#

[[ -z "$env_tool_defaults" ]] || return 0
[[ " $env_local_unset " == *\ env_tool_defaults\ * ]] || env_local_unset+=' env_tool_defaults'
env_tool_defaults=true

unset   DEVNODES ERL_LIBS
export  LANG='C'
env_reset_unset+=' LANG'

. "$LOCAL_ENV_DIR/os.type"

LDFLAGS='-O3'

case "$os_type" in
    darwin )
        LDFLAGS="-arch x86_64 $LDFLAGS"
        # ugly hack
        if [[ -z "$EXCLUDE_OSX_RT_VERS_FLAG" \
        || "$EXCLUDE_OSX_RT_VERS_FLAG" == 'false' ]]
        then
            LDFLAGS+=" -mmacosx-version-min=$(\
                /usr/bin/sw_vers -productVersion | /usr/bin/cut -d. -f1,2)"
        fi
        ccands='/usr/bin/cc gcc cc'
        cccands='/usr/bin/c++ g++ c++'
        ;;
    linux )
        ccands='gcc cc'
        cccands='g++ gcc c++'
        ;;
    *bsd )
        ccands='clang39 clang38 clang37 /usr/bin/cc gcc cc'
        cccands='/usr/bin/c++ g++ c++'
        ;;
    * )
        ccands='cc gcc'
        cccands='c++ g++ gcc'
        ;;
esac

CFLAGS="-m64 -march=native $LDFLAGS"
CXXFLAGS="$CFLAGS"

for c in icc $ccands $CC
do
    CC="$(which $c 2>/dev/null || true)"
    [[ -z "$CC" ]] || break
done
if [[ -z "$CC" ]]
then
    echo    'error: no C compiler found!' >&2
    unset   c ccand cccand
    return  2
fi
if [[ "${CC##*/}" == icc || "${CC##*/}" == clang* ]]
then
    CXX="$CC"
else
    for c in $cccands $CC
    do
        CXX="$(which $c 2>/dev/null || true)"
        [[ -z "$CXX" ]] || break
    done
fi
unset   c ccands cccands

CCC="$CXX"
CCFLAGS="$CXXFLAGS"

unset   AR ARFLAGS CPPFLAGS LD MAKEFLAGS RANLIB
export  CC CFLAGS CCC CCFLAGS CXX CXXFLAGS LDFLAGS
env_reset_unset+=' CC CFLAGS CCC CCFLAGS CXX CXXFLAGS LDFLAGS'
