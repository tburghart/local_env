#!/usr/bin/false 'This file is meant to be sourced'
# shellcheck disable=SC2096 # shebangs can only specify a single parameter
# ========================================================================
# Copyright (c) 1994-2024 T. R. Burghart.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# ========================================================================
#
# .profile - Shell startup script for Bourne-ish login shells
#
# Refer to files in https://github.com/tburghart/local_env
#
# Install to $HOME/.profile
#

. "$HOME/etc/shell/sh.shell"
. "$HOME/etc/shell/sh.system"
. "$HOME/etc/shell/sh.user"

#. "/Users/ted/prj/tedb/local_env/home/etc/shell/sh.shell"
#. "/Users/ted/prj/tedb/local_env/home/etc/shell/sh.system"
#. "/Users/ted/prj/tedb/local_env/home/etc/shell/sh.user"

#set | /usr/bin/grep -E '^[[:alnum:]_]+=' | /usr/bin/sort -u
#exit

#
# The environment is set up, what happens next?
#
__sh_profile_export=''
__sh_profile_unset='__sh_profile_export __sh_profile_unset'
unset __sh_profile_next

case "$__sh_sh" in
    bash)
        # bash stupidly doesn't source its rc files from an interactive login shell
        if [[ -n "$__sh_login" && -n "$__sh_interactive" ]]
        then
            __sh_profile_unset+=' __sh_f'
            for __sh_f in "$HOME/.bashrc" "$HOME/.shrc"
            do
                if [[ -f "$__sh_f" ]]
                then
                    if [[ "$__sh_f" != "$HOME/.bashrc" ]]
                    then
                        echo Warning: '***' non-standard environment file \
                            $__sh_f will not be sourced by interactive bash \
                            subshells, consider installing as $HOME/.bashrc
                    fi
                    __sh_profile_next="$__sh_f"
                    break
                fi
            done
        fi
        __sh_profile_unset+=' ENV'
        ;;
    ksh)
        if [[ -z "$ENV" || "$ENV" = "$HOME/.kshrc" || ! -f "$ENV" ]]
        then
            if [[ ! -f "$HOME/.kshrc" && -f "$HOME/.shrc" ]]
            then
                ENV="$HOME/.shrc"
                __sh_profile_export+=' ENV'
            else
                __sh_profile_unset+=' ENV'
            fi
        fi
        ;;
    sh)
        if [[ -z "$ENV" || ! -f "$ENV" ]]
        then
            if [[ -f "$HOME/.shrc" ]]
            then
                ENV="$HOME/.shrc"
                __sh_profile_export+=' ENV'
            else
                __sh_profile_unset+=' ENV'
            fi
        fi
        ;;
    zsh)
        if [[ ! -f "$HOME/.zshrc" && -o interactive && -f "$HOME/.shrc" ]]
        then
            echo Warning: '***' non-standard environment file $HOME/.shrc \
                will not be sourced by interactive zsh subshells, consider \
                installing as $HOME/.zshrc
            __sh_profile_next="$HOME/.shrc"
        fi
        __sh_profile_unset+=' ENV'
        ;;
    *)
        __sh_profile_unset+=' ENV'
        ;;
esac

# shellcheck disable=SC2163
[[ -z "$__sh_profile_export" ]] || export $__sh_profile_export
unset $__sh_profile_unset
if [[ -n "$__sh_profile_next" ]]
then
    . "$__sh_profile_next"
    unset __sh_profile_next
fi
