#
# .profile - Shell startup script for login shells
#

BASHO_PRJ_BASE="$HOME/prj/basho"
TRB_PRJ_BASE="$HOME/prj/tedb"
LOCAL_ENV_DIR="$TRB_PRJ_BASE/local_env"
for LOCAL_OTP_DIR in \
    '/opt/basho' '/opt/local' '/usr/local' \
    "$BASHO_PRJ_BASE/local" "$TRB_PRJ_BASE/local" "$HOME/local"
do
    if [[ -d "$LOCAL_OTP_DIR" && -w "$LOCAL_OTP_DIR" ]] ; then break ; fi
done
export BASHO_PRJ_BASE TRB_PRJ_BASE LOCAL_ENV_DIR LOCAL_OTP_DIR

stype="$(uname -s)"
mtype="$(uname -m)"
usern="${LOGNAME:-${USER:-$(id -un)}}"
unset_vars='stype ntype usern'

pathbeg='/usr/local /opt/local /usr /opt'
pathend='/usr/local/cuda /usr/local/mysql'
pathadd=''
bpath=''
spath=''
unset_vars="$unset_vars pathbeg pathend pathadd bpath spath"

if [[ "$stype" == 'Darwin' && "$(sw_vers -productName)" == 'Mac OS X' ]]
then
    gui='OSX'
    if [[ -d "$HOME/bin/OsX" ]]
    then
        bpath="${bpath:+${bpath}:}$HOME/bin/OsX"
    fi
    if [[ -d "${HOME}/sbin/OsX" ]]
    then
        spath="${spath:+${spath}:}$HOME/sbin/OsX"
    fi
else
    pathend="/usr/X11R7 /usr/X11R6 $pathend"
    pathadd="$pathadd /usr/bin/X11R7 /usr/bin/X11R6 /usr/bin/X11"
fi
unset_vars="$unset_vars gui"

for d in "/$stype/$mtype" "/$stype" ''
do
    if [[ -d "$HOME/bin${d}" ]]
    then
        bpath="${bpath:+${bpath}:}${HOME}/bin${d}"
    fi
    if [[ -d "$HOME/sbin${d}" ]]
    then
        spath="${spath:+${spath}:}${HOME}/sbin${d}"
    fi
done
unset_vars="$unset_vars d"

bpath="${bpath:+${bpath}:}${LOCAL_ENV_DIR}"

for d in $pathbeg ${PATH//:/ } / $pathend
do
    case "$d" in
        / )
            b='/bin'
            s='/sbin'
            ;;
        */bin )
            b="$d"
            s=''
            ;;
        */sbin )
            b=''
            s="$d"
            ;;
        * )
            b="$d/bin"
            s="$d/sbin"
            ;;
    esac
    if [[ -n "$b" && -d "$b" ]] && ! [[ "$bpath" =~ ^(.*:)?$b(:.*)?$ ]]
    then
        bpath="${bpath:+${bpath}:}$b"
    fi
    if [[ -n "$s" && -d "$s" ]] && ! [[ "$spath" =~ ^(.*:)?$s(:.*)?$ ]]
    then
        spath="${spath:+${spath}:}$s"
    fi
done
unset_vars="$unset_vars b s"

#
# handle explicit paths
#
for d in $pathadd
do
    if [[ -d "$d" ]] && ! [[ "$bpath" =~ ^(.*:)?$d(:.*)?$ ]]
    then
        bpath="${bpath:+${bpath}:}$d"
    fi
done

PATH="$bpath:$spath"
export PATH

unset_vars="$unset_vars m"
case "$stype" in
    Linux | Darwin )
        m="$(which make) $(which gmake) make"
        ;;
    * )
        m="$(which gmake) $(which make) make"
        ;;
esac
for MAKE in $m ; do break ; done
export MAKE

ECP='/bin/cp -p'
ESED='/usr/bin/sed -E'
case "$stype" in
    Darwin )
        ECP='/bin/cp -pX'
        ;;
    Linux )
        ESED='/usr/bin/sed -r'
        ;;
esac
export ECP ESED

for GIT in $(which /usr/bin/git) \
    $(which /usr/local/bin/git) $(which git) git ; do break ; done
export GIT

BLOCKSIZE=K
for EDITOR in $(which vi) $(which nano) vi ; do break ; done
for PAGER in $(which less) $(which more) more ; do break ; done
export BLOCKSIZE EDITOR PAGER

if [[ -n "$SSH_TTY" ]]
then
    MATE="$(which rmate)"
else
    MATE="$(which mate)"
fi
if [[ -n "$MATE" ]]
then
    export MATE
    [[ -n "$VISUAL" ]] || VISUAL="$MATE --wait"
else
    unset MATE
fi

if [[ -z "$VISUAL" ]]
then
    for VISUAL in $(which tedit) $EDITOR ; do break ; done
fi
P4EDITOR="$VISUAL"
WINEDITOR="$VISUAL"
export VISUAL P4EDITOR WINEDITOR

unset $unset_vars unset_vars 2>/dev/null

if [[ -f "$HOME/.shrc" ]]
then
    ENV="$HOME/.shrc"
    export ENV
    . "$ENV"
fi

# in case $HOME is changed along the way ...
cd "$HOME"
