#!/usr/bin/false This file is meant to be sourced
# ========================================================================
# Copyright (c) 2013-2018 T. R. Burghart.
# 
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# ========================================================================
#
# local Common Aliases file
#

# Hopefully we'll pick this up from being set in /etc/profile, but it's not
# exported so check in case we're not in the login shell.
if [ -z "$__sh_which" ]
then
    #
    # Order shell tests to check for those that may be emulating others before
    # checking for those that may be emulated by them.
    #
    if [[ -n "$ZSH_VERSION" ]]
    then
        __sh_which='whence -p'
    elif [[ -n "$BASH_VERSION" ]]
    then
        __sh_which='type -P'
    elif [[ -n "$KSH_VERSION" ]]
    then
        __sh_which='whence -p'
    #
    # See if we're in a shell that has a suitable builtin to use as 'which'.
    # Use 'mkdir' as our test target, since it's almost certainly an actual
    # executable file on the $PATH.
    #
    elif whence -p mkdir 1>/dev/null 2>&1 \
        && [ `whence -p mkdir 2>&1` = */mkdir ]
    then
        __sh_which='whence -p'
    elif type -P mkdir 1>/dev/null 2>&1 \
        && [ `type -P mkdir 2>&1` = */mkdir ]
    then
        __sh_which='type -P'
    else
        __sh_which='which'
    fi
fi

# basics
if [ -z "$($__sh_which wget 2>/dev/null || true)" ]
then
    x="$($__sh_which curl 2>/dev/null || true)"
    if [ -n "$x" ]
    then
        alias wget="$x --remote-name-all"
    fi
    unset x
fi

# default options
alias df='/bin/df -h'
alias scp='/usr/bin/scp -p'

# common ls enhancements
alias l.='/bin/ls -lha'
alias la='/bin/ls -lhA'
alias lat='/bin/ls -lhAtr'
alias lh='/bin/ls -lhH'
alias ll='/bin/ls -lh'
alias lla='/bin/ls -lh'
alias lld='/bin/ls -lhd'
alias llf='/bin/ls -lh'
alias lll='/bin/ls -lh'
alias lr='/bin/ls -lhR'
alias lt='/bin/ls -lhtr'

DATE="$($__sh_which date 2>/dev/null || true)"
[ -n "$DATE" -a -f "$DATE" -a -x "$DATE" ] || DATE='date'

GREP="$($__sh_which grep 2>/dev/null || true)"
[ -n "$GREP" -a -f "$GREP" -a -x "$GREP" ] || GREP='grep'
EGREP="$GREP -E"

SED="$($__sh_which sed 2>/dev/null || true)"
[ -n "$SED" -a -f "$SED" -a -x "$SED" ] || SED='sed'
ESED="$SED -E"

for UNAME in /usr/bin/uname /bin/uname $($__sh_which uname 2>/dev/null || true) uname
do
    if [ -f "$UNAME" -a -x "$UNAME" ]
    then
        alias uname="$UNAME"
        break
    fi
done

ECP='/bin/cp -p'

# platform specific switches and aliases
case "$($UNAME -s)" in
    Darwin)
        alias dscl='/usr/bin/dscl -raw .'
        alias lchflags='/usr/bin/chflags -h'
        alias ldd='/usr/bin/otool -L'
        alias lla='/bin/ls -lh@'
        alias llf='/bin/ls -lhO'
        alias lll='/bin/ls -lhO@'
        alias pldump='/usr/bin/plutil -convert xml1 -o -'
        alias unhide='/usr/bin/chflags -h nohidden'
        ECP='/bin/cp -pX'
        ;;
    FreeBSD)
        alias lchflags='/bin/chflags -h'
        alias llf='/bin/ls -lho'
        alias lll='/bin/ls -lho'
        alias unhide='/bin/chflags -h nohidden'
        ;;
    Linux)
        alias llf='/bin/ls -lhZ'
        alias lll='/bin/ls -lh --lcontext'
        ;;
    SunOS)
        alias llf='/bin/ls -lhZ'
        alias lll='/bin/ls -lhZ'
        ;;
esac
export DATE ECP EGREP ESED GREP SED UNAME

alias ecp="$ECP"
alias egrep="$EGREP"
alias esed="$ESED"
